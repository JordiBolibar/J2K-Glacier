/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package waska_gui;

import java.util.Map;

/**
 *
 * @author manni
 */
public class WaskaFrame extends javax.swing.JFrame {

    String Time = "2070-2100";
    private Model model;
    Float landf;
    Float stadtf;
    Float ackerf;
    Float gruenf;
    Float laubf;
    Float nadelf;
    Boolean slideraction = false;
    Boolean Res_activ = false;
    Boolean water_in = true;
    String mwork = "\\JAMS-Wipfra_CCC";
    String workspace;
    String sceno = "_RCP85";
    int irriprop;
    String Currentbase;
    int modeli;
    int maxfilli;
    int minfilli;
    double Res_vol_d = 5320000000.0;
    double minfilld = 0.65;
    double maxfilld = 0.9;
    int min_flux = 12000000;
    double cat_size = 160.3; //catchment size Wipfra
    double dens_rural = 1000; // population density rual
    double dens_urb = 10000; // population density urban
    double H2O_per_ca = 120; // water use per capita

    /**
     * Creates new form WaskaFrame
     */
    public WaskaFrame(Model model) {
        this.model = model;
        initComponents();
        setDefaults();

    }

    private void setDefaults() {
        Currentbase = model.getCurrentbase();
        this.mwork = Currentbase + "\\JAMS-Wipfra_CCC";

        Map<String, Parameter> parameters = model.getParameters();
        jRadioButton1.setEnabled(false);
        jComboBox1.setSelectedIndex(0);
        modeli = 0;
        sceno = "_RCP85";

        Time_pull_down.setSelectedIndex(0);

        String land = parameters.get("Land").getDefaultValue();
        landf = Float.parseFloat(land);
        int landi = Math.round(landf);
        laendlich_slider.setValue(landi);

        String stadt = parameters.get("Stadt").getDefaultValue();
        stadtf = Float.parseFloat(stadt);
        int stadti = Math.round(stadtf);
        staetisch_slider.setValue(stadti);

        String acker = parameters.get("Acker").getDefaultValue();
        ackerf = Float.parseFloat(acker);
        int ackeri = Math.round(ackerf);
        acker_slider.setValue(ackeri);

        String gruen = parameters.get("Gruen").getDefaultValue();
        gruenf = Float.parseFloat(gruen);
        int grueni = Math.round(gruenf);
        gruen_slider.setValue(grueni);

        String laub = parameters.get("Laub").getDefaultValue();
        laubf = Float.parseFloat(laub);
        int laubi = Math.round(laubf);
        laubwald_slider.setValue(laubi);

        String nadel = parameters.get("Nadel").getDefaultValue();
        nadelf = Float.parseFloat(nadel);
        int nadeli = Math.round(nadelf);
        nadelwald_slider.setValue(nadeli);

        slideraction = true;

        String irri = parameters.get("Irriprop").getDefaultValue();
        int irrii = Integer.parseInt(irri);
        irri_slider.setValue(irrii);

        String Res_a = parameters.get("Res_activ").getDefaultValue();
        Res_activ = Boolean.parseBoolean(Res_a);
        jCheckBox2.setSelected(Res_activ);

        jCheckBox1.setSelected(false);

        String Res_vol_s = parameters.get("Res_vol").getDefaultValue();
        Res_vol_d = Double.parseDouble(Res_vol_s);
        long Res_vol_i_m_3_i = Math.round(Res_vol_d / 1000);
        Des_vol_slider.setValue((int) Res_vol_i_m_3_i);

        String min_flux_s = parameters.get("Res_min_flux").getDefaultValue();
        min_flux = Integer.parseInt(min_flux_s);
        min_flux_slider2.setValue(min_flux);

        String minfill_s = parameters.get("Res_min_fill").getDefaultValue();
        minfilld = Double.parseDouble(minfill_s);
        long minfilli = Math.round(minfilld * 100);
        Min_fill_slider3.setValue((int) minfilli);

        String maxfill_s = parameters.get("Res_max_fill").getDefaultValue();
        maxfilld = Double.parseDouble(maxfill_s);
        long maxfilli = Math.round(maxfilld * 100);
        max_fill_slider.setValue((int) maxfilli);

        /*        String irri = parameters.get("Res_min_fill").getDefaultValue();
         int irrii =  Integer.parseInt(irri);
         irri_slider.setValue(irrii);


         String irri = parameters.get("Res_max_fill").getDefaultValue();
         int irrii =  Integer.parseInt(irri);
         irri_slider.setValue(irrii);
         */
        double Res_vol_d = 5320000000.0;
        double minfilld = 0.65;
        double maxfilld = 0.9;
        int min_flux = 12000000;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel43 = new javax.swing.JLabel();
        Des_vol_slider1 = new javax.swing.JSlider();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Time_pull_down = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        laendlich_slider = new javax.swing.JSlider();
        staetisch_slider = new javax.swing.JSlider();
        acker_slider = new javax.swing.JSlider();
        gruen_slider = new javax.swing.JSlider();
        laubwald_slider = new javax.swing.JSlider();
        nadelwald_slider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Landfield = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        Landfield1 = new javax.swing.JTextField();
        Landfield2 = new javax.swing.JTextField();
        Landfield3 = new javax.swing.JTextField();
        Landfield4 = new javax.swing.JTextField();
        Landfield5 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        irri_slider = new javax.swing.JSlider();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        Landfield6 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel59 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel38 = new javax.swing.JLabel();
        Des_vol_slider = new javax.swing.JSlider();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        min_flux_slider2 = new javax.swing.JSlider();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        Min_fill_slider3 = new javax.swing.JSlider();
        jLabel54 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        max_fill_slider = new javax.swing.JSlider();
        startButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Gr√ºnland");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Ackerland");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Laubwald");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Nadelwald");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Siedlung (l√§ndlich)");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Siedlung (st√§dtisch)");

        jScrollPane1.setViewportView(jEditorPane1);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("max. Talsperrenvolumen");

        Des_vol_slider1.setMaximum(10640000);
        Des_vol_slider1.setValue(5320000);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText("m¬≥");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText("10,64 mio m¬≥");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("0 m¬≥");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setName("Landnutzung"); // NOI18N

        jLabel1.setText("Model");

        Time_pull_down.setEditable(true);
        Time_pull_down.setMaximumRowCount(3);
        Time_pull_down.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2071-2100", "2021-2050", "1961-1990" }));
        Time_pull_down.setToolTipText("Zeitraum der Simulation");
        Time_pull_down.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Time_pull_downItemStateChanged(evt);
            }
        });

        jLabel3.setText("Modellzeitraum");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("RCP45");
        jRadioButton1.setToolTipText("RCP45 Szenario");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("RCP85");
        jRadioButton2.setToolTipText("RCP85 Szenario");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });
        jRadioButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton2StateChanged(evt);
            }
        });

        jLabel33.setText("Szenario");

        jComboBox1.setMaximumRowCount(10);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CCCma-CanESM2-CLMcom-CCLM4", "CNRM-CERFACS-CNRM-CM5-CLMcom-CCLM4", "ICHEC-EC-EARTH-CCLM4", "MIROC-MIROC5-CLMcom-CCLM4", "MOHC-HadGEM2-ES-CLMcom-CCLM4", "MPI-M-MPI-ESM-CLMcom-CCLM4" }));
        jComboBox1.setToolTipText("K√ºrzel des Euro-Cordex Modells");
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(Time_pull_down, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel33))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButton2)
                                .addComponent(jRadioButton1))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(403, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jLabel33))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Time_pull_down, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );

        Time_pull_down.getAccessibleContext().setAccessibleDescription("Zeitraum der Simulation (1960 - 1990 ist der Referenzzeitraum)");

        jTabbedPane1.addTab("Szenario und Zeitraum", jPanel1);

        laendlich_slider.setPaintLabels(true);
        laendlich_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                laendlich_sliderStateChanged(evt);
            }
        });

        staetisch_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                staetisch_sliderStateChanged(evt);
            }
        });

        acker_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                acker_sliderStateChanged(evt);
            }
        });

        gruen_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gruen_sliderStateChanged(evt);
            }
        });

        laubwald_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                laubwald_sliderStateChanged(evt);
            }
        });

        nadelwald_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nadelwald_sliderStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Siedlung (l√§ndlich)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Siedlung (st√§dtisch)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Ackerland");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Gr√ºnland");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Laubwald");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Nadelwald");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("100%");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("100%");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("100%");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("100%");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("100%");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("100%");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("0%");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("0%");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("0%");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("0%");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("0%");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("0%");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, laendlich_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel27.setText("%");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, staetisch_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gruen_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, acker_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, nadelwald_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, laubwald_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel28.setText("%");

        jLabel29.setText("%");

        jLabel30.setText("%");

        jLabel31.setText("%");

        jLabel32.setText("%");

        irri_slider.setToolTipText("Die Bew√§sserungsfl√§che errechnet sich aus Anteil Bew√§sserung * Anteil Ackerland");
        irri_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                irri_sliderStateChanged(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("0%");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("100%");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Anteil bew√§sserten Ackerlands");
        jLabel36.setToolTipText("Die Bew√§sserungsfl√§che errechnet sich aus Anteil Bew√§sserung * Anteil Ackerland");

        jLabel37.setText("%");

        Landfield6.setToolTipText("Die Bew√§sserungsfl√§che errechnet sich aus Anteil Bew√§sserung * Anteil Ackerland");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, irri_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), Landfield6, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox1.setToolTipText("Die Siedllungen entnehmen das Trinkwasser aus dem Gebiet und das Abwasser wird auserhalb eingeleitet.");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel59.setText("Trinkwasserentnahme");
        jLabel59.setToolTipText("Die Siedllungen entnehmen das Trinkwasser aus dem Gebiet und das Abwasser wird auserhalb eingeleitet.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(gruen_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(laubwald_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(nadelwald_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(acker_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(staetisch_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(irri_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel36))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel59))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(laendlich_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Landfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Landfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Landfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Landfield4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Landfield5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Landfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Landfield6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37)))
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel59))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(Landfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel2)
                    .addComponent(laendlich_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16)
                    .addComponent(jLabel22)
                    .addComponent(staetisch_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Landfield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel28))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jLabel23)
                    .addComponent(acker_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Landfield3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(jLabel24)
                    .addComponent(gruen_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Landfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(jLabel25)
                    .addComponent(laubwald_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Landfield5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel32)
                    .addComponent(jLabel20)
                    .addComponent(jLabel26)
                    .addComponent(nadelwald_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Landfield4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(Landfield6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(irri_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Landnutzung", null, jPanel2, "Erzeugung von Landnutzungsszenarien");

        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText("Talsperre aktiv");

        Des_vol_slider.setMaximum(10640000);
        Des_vol_slider.setValue(5320000);
        Des_vol_slider.setMinimum(0);
        Des_vol_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Des_vol_sliderStateChanged(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("mio. m¬≥");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("10,64 mio m¬≥");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Des_vol_slider, org.jdesktop.beansbinding.ELProperty.create("${value / 1000000}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText("0 m¬≥");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("max. Talsperrenvolumen");

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Mindestabflu√ü");

        min_flux_slider2.setMaximum(24000000);
        min_flux_slider2.setToolTipText("");
        min_flux_slider2.setValue(12000000);
        min_flux_slider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                min_flux_slider2StateChanged(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setText("m¬≥/s");

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setText("0.277 m¬≥/s");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, min_flux_slider2, org.jdesktop.beansbinding.ELProperty.create("${value / 86400000}"), jTextField3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("0 m¬≥/s");

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel51.setText("%");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("100%");

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel53.setText("0%");

        Min_fill_slider3.setValue(65);
        Min_fill_slider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Min_fill_slider3StateChanged(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel54.setText("Min. Zielf√ºllrate");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Min_fill_slider3, org.jdesktop.beansbinding.ELProperty.create("${value}"), jTextField4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel55.setText("0%");

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel56.setText("Flutablassf√ºllrate");

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel57.setText("100%");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, max_fill_slider, org.jdesktop.beansbinding.ELProperty.create("${value}"), jTextField5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel58.setText("%");

        max_fill_slider.setValue(90);
        max_fill_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                max_fill_sliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel53)
                            .addComponent(jLabel50))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(min_flux_slider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Min_fill_slider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(153, 153, 153)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addGap(142, 142, 142)
                                .addComponent(jLabel51))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addGap(146, 146, 146)
                                .addComponent(jLabel48))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel56)
                                .addGap(131, 131, 131)
                                .addComponent(jLabel58))
                            .addComponent(jLabel42))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(38, 38, 38)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jCheckBox2)
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel38))
                                    .addComponent(Des_vol_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel55)
                                .addGap(51, 51, 51)
                                .addComponent(max_fill_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel57)
                                    .addComponent(jLabel52))
                                .addGap(242, 242, 242)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel39)
                        .addGap(28, 28, 28))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox2)
                    .addComponent(jLabel38))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel42)
                    .addComponent(Des_vol_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(min_flux_slider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(jLabel49)
                    .addComponent(jLabel47)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(jLabel53)
                    .addComponent(Min_fill_slider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel55)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58)
                    .addComponent(max_fill_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(243, Short.MAX_VALUE))
        );

        jCheckBox2.getAccessibleContext().setAccessibleName("res_activ");
        jCheckBox2.getAccessibleContext().setAccessibleDescription("Talsperre im Model aktiviert");
        jLabel38.getAccessibleContext().setAccessibleDescription("Talsperre im Model aktiviert");
        Des_vol_slider.getAccessibleContext().setAccessibleName("");

        jTabbedPane1.addTab("Talsperre", jPanel3);
        jPanel3.getAccessibleContext().setAccessibleName("JPanel3");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton)
                .addGap(140, 140, 140))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(startButton)
                    .addComponent(resetButton)
                    .addComponent(exitButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Landnutzung");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        String Timestring = "2070-11-01 07:30 2099-10-31 07:30 6 1";

        if (Time.equals("2071-2100")) {
            Timestring = "2070-11-01 07:30 2099-10-31 07:30 6 1";
        } else if (Time.equals("2021-2050")) {
            Timestring = "2031-11-01 07:30 2050-10-31 07:30 6 1";
        } else if (Time.equals("1961-1990")) {
            Timestring = "1961-11-01 07:30 1990-10-31 07:30 6 1";
        }

        model.getParameters().get("workspace").setValue((mwork + sceno).replace("\\", "/"));
        model.getParameters().get("time").setValue(Timestring);
        model.getParameters().get("Land").setValue(landf.toString());
        model.getParameters().get("Stadt").setValue(stadtf.toString());
        model.getParameters().get("Acker").setValue(ackerf.toString());
        model.getParameters().get("Gruen").setValue(gruenf.toString());
        model.getParameters().get("Laub").setValue(laubf.toString());
        model.getParameters().get("Nadel").setValue(nadelf.toString());
        model.getParameters().get("Irriprop").setValue(String.valueOf(irriprop));
        model.getParameters().get("Res_activ").setValue(String.valueOf(Res_activ));
        model.getParameters().get("Res_vol").setValue(String.valueOf(Res_vol_d));
        model.getParameters().get("Res_min_flux").setValue(String.valueOf(min_flux));
        model.getParameters().get("Res_min_fill").setValue(String.valueOf(minfilld));
        model.getParameters().get("Res_max_fill").setValue(String.valueOf(maxfilld));

        double optfill = ((maxfilld - minfilld) * 0.8) + minfilld;

        double water_use = 0;

        if (water_in) {

            double inhabitance = (landf / 100 * cat_size * dens_rural) + (stadtf / 100 * cat_size * dens_urb);

            water_use = inhabitance * H2O_per_ca;
        }

        model.getParameters().get("Res_opt_fill").setValue(String.valueOf(optfill));

        model.getParameters().get("settl_water_use").setValue(String.valueOf(water_use));

        Thread t = new Thread(new Runnable() {
            public void run() {
                JAMSStarter starter = new JAMSStarter(model);
                starter.start();
            }
        });
        t.start();

    }//GEN-LAST:event_startButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        setDefaults();// TODO add your handling code here:
    }//GEN-LAST:event_resetButtonActionPerformed

    private void irri_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_irri_sliderStateChanged
        irriprop = irri_slider.getValue();// TODO add your handling code here:
    }//GEN-LAST:event_irri_sliderStateChanged

    private void nadelwald_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nadelwald_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int nadeli = nadelwald_slider.getValue();// TODO add your handling code here:

            float rest = 100 - nadeli;
            float restsum = stadtf + ackerf + gruenf + laubf + landf;

            if (rest + restsum < 5) {

                laendlich_slider.setValue((int) (rest / 5));

                staetisch_slider.setValue((int) (rest / 5));

                acker_slider.setValue((int) (rest / 5));

                gruen_slider.setValue((int) (rest / 5));

                laubwald_slider.setValue((int) (rest / 5));

                landf = (float) (rest / 5);
                stadtf = (float) (rest / 5);
                ackerf = (float) (rest / 5);
                gruenf = (float) (rest / 5);
                laubf = (float) (rest / 5);
                nadelf = (float) nadeli;

                //nadelwald_slider.setValue(nadeli);
            } else {

                int landi = Math.round((landf / restsum) * rest);
                laendlich_slider.setValue(landi);
                int stadti = Math.round((stadtf / restsum) * rest);
                staetisch_slider.setValue(stadti);
                int ackeri = Math.round((ackerf / restsum) * rest);
                acker_slider.setValue(ackeri);
                int grueni = Math.round((gruenf / restsum) * rest);
                gruen_slider.setValue(grueni);
                int laubi = Math.round((laubf / restsum) * rest);
                laubwald_slider.setValue(laubi);
                //int nadeli = Math.round((nadelf/restsum)*rest);
                //nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        }    // TODO add your handling code here:
    }//GEN-LAST:event_nadelwald_sliderStateChanged

    private void laubwald_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_laubwald_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int laubi = laubwald_slider.getValue();// TODO add your handling code here:

            float rest = 100 - laubi;
            float restsum = stadtf + ackerf + gruenf + landf + nadelf;
            if (rest + restsum < 5) {

                laendlich_slider.setValue((int) (rest / 5));

                staetisch_slider.setValue((int) (rest / 5));

                acker_slider.setValue((int) (rest / 5));

                gruen_slider.setValue((int) (rest / 5));

                nadelwald_slider.setValue((int) (rest / 5));

                landf = (float) (rest / 5);
                stadtf = (float) (rest / 5);
                ackerf = (float) (rest / 5);
                gruenf = (float) (rest / 5);
                laubf = (float) laubi;
                nadelf = (float) (rest / 5);

                //nadelwald_slider.setValue(nadeli);
            } else {

                int landi = Math.round((landf / restsum) * rest);
                laendlich_slider.setValue(landi);
                int stadti = Math.round((stadtf / restsum) * rest);
                staetisch_slider.setValue(stadti);
                int ackeri = Math.round((ackerf / restsum) * rest);
                acker_slider.setValue(ackeri);
                int grueni = Math.round((gruenf / restsum) * rest);
                gruen_slider.setValue(grueni);
                //int laubi = Math.round((laubf/restsum)*rest);
                //laubwald_slider.setValue(laubi);
                int nadeli = Math.round((nadelf / restsum) * rest);
                nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_laubwald_sliderStateChanged

    private void gruen_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gruen_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int grueni = gruen_slider.getValue();// TODO add your handling code here:

            float rest = 100 - grueni;
            float restsum = stadtf + ackerf + landf + laubf + nadelf;
            if (rest + restsum < 5) {

                laendlich_slider.setValue((int) (rest / 5));

                staetisch_slider.setValue((int) (rest / 5));

                acker_slider.setValue((int) (rest / 5));

                nadelwald_slider.setValue((int) (rest / 5));

                laubwald_slider.setValue((int) (rest / 5));

                landf = (float) (rest / 5);
                stadtf = (float) (rest / 5);
                ackerf = (float) (rest / 5);
                gruenf = (float) grueni;
                laubf = (float) (rest / 5);
                nadelf = (float) (rest / 5);

                //nadelwald_slider.setValue(nadeli);
            } else {

                int landi = Math.round((landf / restsum) * rest);
                laendlich_slider.setValue(landi);
                int stadti = Math.round((stadtf / restsum) * rest);
                staetisch_slider.setValue(stadti);
                int ackeri = Math.round((ackerf / restsum) * rest);
                acker_slider.setValue(ackeri);
                //int grueni = Math.round((gruenf/restsum)*rest);
                //gruen_slider.setValue(grueni);
                int laubi = Math.round((laubf / restsum) * rest);
                laubwald_slider.setValue(laubi);
                int nadeli = Math.round((nadelf / restsum) * rest);
                nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_gruen_sliderStateChanged

    private void acker_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_acker_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int ackeri = acker_slider.getValue();// TODO add your handling code here:

            float rest = 100 - ackeri;
            float restsum = stadtf + landf + gruenf + laubf + nadelf;
            if (rest + restsum < 5) {

                laendlich_slider.setValue((int) (rest / 5));

                staetisch_slider.setValue((int) (rest / 5));

                nadelwald_slider.setValue((int) (rest / 5));

                gruen_slider.setValue((int) (rest / 5));

                laubwald_slider.setValue((int) (rest / 5));

                landf = (float) (rest / 5);
                stadtf = (float) (rest / 5);
                ackerf = (float) ackeri;
                gruenf = (float) (rest / 5);
                laubf = (float) (rest / 5);
                nadelf = (float) (rest / 5);

                //nadelwald_slider.setValue(nadeli);
            } else {

                int landi = Math.round((landf / restsum) * rest);
                laendlich_slider.setValue(landi);
                int stadti = Math.round((stadtf / restsum) * rest);
                staetisch_slider.setValue(stadti);
                //int ackeri = Math.round((ackerf/restsum)*rest);
                //acker_slider.setValue(ackeri);
                int grueni = Math.round((gruenf / restsum) * rest);
                gruen_slider.setValue(grueni);
                int laubi = Math.round((laubf / restsum) * rest);
                laubwald_slider.setValue(laubi);
                int nadeli = Math.round((nadelf / restsum) * rest);
                nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        }    // TODO add your handling code here:
    }//GEN-LAST:event_acker_sliderStateChanged

    private void staetisch_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_staetisch_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int stadti = staetisch_slider.getValue();// TODO add your handling code here:

            float rest = 100 - stadti;
            float restsum = landf + ackerf + gruenf + laubf + nadelf;
            if (rest + restsum < 5) {

                laendlich_slider.setValue((int) (rest / 5));

                nadelwald_slider.setValue((int) (rest / 5));

                acker_slider.setValue((int) (rest / 5));

                gruen_slider.setValue((int) (rest / 5));

                laubwald_slider.setValue((int) (rest / 5));

                landf = (float) (rest / 5);
                stadtf = (float) stadti;
                ackerf = (float) (rest / 5);
                gruenf = (float) (rest / 5);
                laubf = (float) (rest / 5);
                nadelf = (float) (rest / 5);

                //nadelwald_slider.setValue(nadeli);
            } else {

                int landi = Math.round((landf / restsum) * rest);
                laendlich_slider.setValue(landi);
                //int stadti = Math.round((stadtf/restsum)*rest);
                //staetisch_slider.setValue(stadti);
                int ackeri = Math.round((ackerf / restsum) * rest);
                acker_slider.setValue(ackeri);
                int grueni = Math.round((gruenf / restsum) * rest);
                gruen_slider.setValue(grueni);
                int laubi = Math.round((laubf / restsum) * rest);
                laubwald_slider.setValue(laubi);
                int nadeli = Math.round((nadelf / restsum) * rest);
                nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        } // TODO add your handling code here:
    }//GEN-LAST:event_staetisch_sliderStateChanged

    private void laendlich_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_laendlich_sliderStateChanged
        if (slideraction) {
            slideraction = false;
            int landi = laendlich_slider.getValue();// TODO add your handling code here:

            float rest = 100 - landi;
            float restsum = stadtf + ackerf + gruenf + laubf + nadelf;
            if (rest + restsum < 5) {

                nadelwald_slider.setValue((int) (rest / 5));

                staetisch_slider.setValue((int) (rest / 5));

                acker_slider.setValue((int) (rest / 5));

                gruen_slider.setValue((int) (rest / 5));

                laubwald_slider.setValue((int) (rest / 5));

                landf = (float) landi;
                stadtf = (float) (rest / 5);
                ackerf = (float) (rest / 5);
                gruenf = (float) (rest / 5);
                laubf = (float) (rest / 5);
                nadelf = (float) (rest / 5);

                //nadelwald_slider.setValue(nadeli);
            } else {

                //int landi = Math.round((landf/restsum)*rest);
                //laendlich_slider.setValue(landi);
                int stadti = Math.round((stadtf / restsum) * rest);
                staetisch_slider.setValue(stadti);
                int ackeri = Math.round((ackerf / restsum) * rest);
                acker_slider.setValue(ackeri);
                int grueni = Math.round((gruenf / restsum) * rest);
                gruen_slider.setValue(grueni);
                int laubi = Math.round((laubf / restsum) * rest);
                laubwald_slider.setValue(laubi);
                int nadeli = Math.round((nadelf / restsum) * rest);
                nadelwald_slider.setValue(nadeli);

                landf = (float) landi;
                stadtf = (float) stadti;
                ackerf = (float) ackeri;
                gruenf = (float) grueni;
                laubf = (float) laubi;
                nadelf = (float) nadeli;
            }
            slideraction = true;

        }
    }//GEN-LAST:event_laendlich_sliderStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        modeli = jComboBox1.getSelectedIndex();
        // 0 = "CCCma-CanESM2-CLMcom-CCLM4",
        // 1 = "CNRM-CERFACS-CNRM-CM5-CLMcom-CCLM4",
        // 2 = "ICHEC-EC-EARTH-CCLM4",
        // 3 = "MIROC-MIROC5-CLMcom-CCLM4",
        // 4 = "MOHC-HadGEM2-ES-CLMcom-CCLM4",
        // 5 = "MPI-M-MPI-ESM-CLMcom-CCLM4"

        switch (modeli) {
            case 0:
                this.mwork = Currentbase + "\\JAMS-Wipfra_CCC";
                jRadioButton1.setEnabled(false);
                jRadioButton2.setSelected(true);
                sceno = "_RCP85";
                break;
            case 1:
                this.mwork = Currentbase + "\\JAMS-Wipfra_CNRM";
                jRadioButton1.setEnabled(true);
                break;
            case 2:
                this.mwork = Currentbase + "\\JAMS-Wipfra_ICHEC";
                jRadioButton1.setEnabled(true);
                break;
            case 3:
                this.mwork = Currentbase + "\\JAMS-Wipfra_MIROC";
                jRadioButton1.setEnabled(false);
                jRadioButton2.setSelected(true);
                sceno = "_RCP85";
                break;
            case 4:
                this.mwork = Currentbase + "\\JAMS-Wipfra_MOHC";
                jRadioButton1.setEnabled(true);
                break;
            case 5:
                this.mwork = Currentbase + "\\JAMS-Wipfra_MPI";
                jRadioButton1.setEnabled(true);
                break;
        }

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jRadioButton2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton2StateChanged
        //sceno = "_RCP85";// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2StateChanged

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        //sceno = "_RCP45";// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void Time_pull_downItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Time_pull_downItemStateChanged
        Time = String.valueOf(Time_pull_down.getSelectedItem());// TODO add your handling code here:
    }//GEN-LAST:event_Time_pull_downItemStateChanged

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        Res_activ = jCheckBox2.isSelected();// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void Des_vol_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Des_vol_sliderStateChanged
        // TODO add your handling code here:
        int Res_vol_i_m_3 = Des_vol_slider.getValue();
        if (Res_vol_i_m_3 < 0) {
            Res_vol_i_m_3 = 0;
        }

        Res_vol_d = Res_vol_i_m_3 * 1.0;
        Res_vol_d = Res_vol_d * 1000;

    }//GEN-LAST:event_Des_vol_sliderStateChanged

    private void min_flux_slider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_min_flux_slider2StateChanged
        min_flux = min_flux_slider2.getValue();// TODO add your handling code here:
    }//GEN-LAST:event_min_flux_slider2StateChanged

    private void Min_fill_slider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Min_fill_slider3StateChanged
        minfilli = Min_fill_slider3.getValue();// TODO add your handling code here:
        minfilld = minfilli / 100.0;
        if (minfilld > (maxfilld - 0.06)) {
            minfilld = maxfilld - 0.06;
            Min_fill_slider3.setValue((int) (minfilld * 100));

        }
    }//GEN-LAST:event_Min_fill_slider3StateChanged

    private void max_fill_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_max_fill_sliderStateChanged
        maxfilli = max_fill_slider.getValue();// TODO add your handling code here:
        maxfilld = maxfilli / 100.0;
        if (maxfilld < (minfilld + 0.06)) {
            maxfilld = minfilld + 0.06;
            max_fill_slider.setValue((int) (maxfilld * 100));
        }
    }//GEN-LAST:event_max_fill_sliderStateChanged

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
        sceno = "_RCP45"; // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged
        sceno = "_RCP85"; // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        water_in = jCheckBox1.isSelected();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider Des_vol_slider;
    private javax.swing.JSlider Des_vol_slider1;
    private javax.swing.JTextField Landfield;
    private javax.swing.JTextField Landfield1;
    private javax.swing.JTextField Landfield2;
    private javax.swing.JTextField Landfield3;
    private javax.swing.JTextField Landfield4;
    private javax.swing.JTextField Landfield5;
    private javax.swing.JTextField Landfield6;
    private javax.swing.JSlider Min_fill_slider3;
    private javax.swing.JComboBox Time_pull_down;
    private javax.swing.JSlider acker_slider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exitButton;
    private javax.swing.JSlider gruen_slider;
    private javax.swing.JSlider irri_slider;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JSlider laendlich_slider;
    private javax.swing.JSlider laubwald_slider;
    private javax.swing.JSlider max_fill_slider;
    private javax.swing.JSlider min_flux_slider2;
    private javax.swing.JSlider nadelwald_slider;
    private javax.swing.JButton resetButton;
    private javax.swing.JSlider staetisch_slider;
    private javax.swing.JButton startButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
